Class {
	#name : #JollyConstants,
	#superclass : #SharedPool,
	#classVars : [
		'ADDRESS_SIZE',
		'FALSE_VALUE',
		'INSTRUCTION_SIZE',
		'MAX_ADDRESS',
		'MEMORY_SIZE',
		'PRIMITIVE_CALL_ID_ADDRESS',
		'PRIMITIVE_FILE_STREAM_STDERR',
		'PRIMITIVE_FILE_STREAM_STDIN',
		'PRIMITIVE_FILE_STREAM_STDOUT',
		'PRIMITIVE_ID_CLOSE_FILE',
		'PRIMITIVE_ID_FAIL',
		'PRIMITIVE_ID_GET_CHAR',
		'PRIMITIVE_ID_NOPE',
		'PRIMITIVE_ID_OPEN_FILE',
		'PRIMITIVE_ID_PUT_CHAR',
		'PRIMITIVE_ID_STOP_VM',
		'PRIMITIVE_IS_READY_ADDRESS',
		'PRIMITIVE_NOT_READY',
		'PRIMITIVE_READY',
		'PRIMITIVE_RESULT_CODE_ADDRESS',
		'PRIMITIVE_RESULT_POINTER_HIGH_ADDRESS',
		'PRIMITIVE_RESULT_POINTER_LOW_ADDRESS',
		'PRIMITIVE_RESULT_POINTER_MIDDLE_ADDRESS',
		'PROGRAM_COUNTER_ADDRESS',
		'TRUE_VALUE',
		'USER_MEMORY_ADDRESS'
	],
	#category : #'Jolly-VirtualMachine'
}

{ #category : #'class initialization' }
JollyConstants class >> initialize [
	PROGRAM_COUNTER_ADDRESS := 0.
	USER_MEMORY_ADDRESS := 9.
	ADDRESS_SIZE := 3.
	INSTRUCTION_SIZE := ADDRESS_SIZE * 3.
	MEMORY_SIZE := 16r1000000.
	MAX_ADDRESS := MEMORY_SIZE - 1.
	FALSE_VALUE := 16r10.
	TRUE_VALUE := FALSE_VALUE + INSTRUCTION_SIZE.
	
	" Constants related to primitives understood by the virtual machine.
	"
	PRIMITIVE_IS_READY_ADDRESS := 16r000003.
	PRIMITIVE_CALL_ID_ADDRESS :=  16r000004.
	PRIMITIVE_RESULT_CODE_ADDRESS := 16r000005.
	PRIMITIVE_RESULT_POINTER_HIGH_ADDRESS := 16r000006.
	PRIMITIVE_RESULT_POINTER_MIDDLE_ADDRESS := 16r000007.
	PRIMITIVE_RESULT_POINTER_LOW_ADDRESS := 16r000008.
	
	
	PRIMITIVE_ID_NOPE := 0.
	PRIMITIVE_ID_FAIL := 1.
	PRIMITIVE_ID_PUT_CHAR := 2.
	PRIMITIVE_ID_GET_CHAR := 3.
	PRIMITIVE_ID_STOP_VM := 4.
	PRIMITIVE_ID_OPEN_FILE := 5.
	PRIMITIVE_ID_CLOSE_FILE := 6.
	
	PRIMITIVE_NOT_READY := 0.
	PRIMITIVE_READY := 1.

	PRIMITIVE_FILE_STREAM_STDIN := 0.
	PRIMITIVE_FILE_STREAM_STDOUT := 1.
	PRIMITIVE_FILE_STREAM_STDERR := 2
]
